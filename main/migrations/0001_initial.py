# Generated by Django 4.1.1 on 2022-10-13 11:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Checkpoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('category', models.CharField(blank=True, max_length=200, null=True, verbose_name='category')),
                ('type', models.CharField(blank=True, max_length=200, null=True, verbose_name='type')),
            ],
        ),
        migrations.CreateModel(
            name='Culture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='Date',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upper', models.IntegerField(verbose_name='upper bound')),
                ('lower', models.IntegerField(verbose_name='lower bound')),
                ('method', models.CharField(max_length=200, verbose_name='dating method')),
            ],
        ),
        migrations.CreateModel(
            name='Epoch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('date', models.ManyToManyField(to='main.date', verbose_name='time')),
            ],
        ),
        migrations.CreateModel(
            name='Layer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('pos', models.IntegerField(verbose_name='position in profile')),
                ('checkpoint', models.ManyToManyField(blank=True, to='main.checkpoint', verbose_name='checkpoint')),
                ('culture', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='layer', to='main.culture', verbose_name='culture')),
                ('date', models.ManyToManyField(blank=True, to='main.date', verbose_name='date')),
                ('epoch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='layer', to='main.epoch', verbose_name='epoch')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('geo', models.TextField(blank=True, null=True, verbose_name='geojson')),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('doi', models.CharField(max_length=200, verbose_name='doi')),
                ('link', models.CharField(blank=True, max_length=2000, null=True, verbose_name='link')),
                ('pdf', models.FileField(blank=True, null=True, upload_to='papers/', verbose_name='pdf')),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('type', models.CharField(blank=True, max_length=200, verbose_name='type')),
                ('elevation', models.IntegerField(blank=True, verbose_name='elevation')),
                ('loc', models.ManyToManyField(to='main.location', verbose_name='location')),
                ('ref', models.ManyToManyField(blank=True, to='main.reference', verbose_name='reference')),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('date', models.ManyToManyField(blank=True, to='main.date', verbose_name='date')),
                ('layer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sample', to='main.layer', verbose_name='layer')),
                ('ref', models.ManyToManyField(blank=True, to='main.reference', verbose_name='reference')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('type', models.CharField(blank=True, max_length=200, verbose_name='type')),
                ('ref', models.ManyToManyField(blank=True, to='main.reference', verbose_name='reference')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.site', verbose_name='site')),
            ],
        ),
        migrations.AddField(
            model_name='location',
            name='ref',
            field=models.ManyToManyField(blank=True, to='main.reference', verbose_name='reference'),
        ),
        migrations.AddField(
            model_name='layer',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='layer', to='main.profile', verbose_name='profile'),
        ),
        migrations.AddField(
            model_name='layer',
            name='ref',
            field=models.ManyToManyField(blank=True, to='main.reference', verbose_name='reference'),
        ),
        migrations.AddField(
            model_name='epoch',
            name='loc',
            field=models.ManyToManyField(to='main.location', verbose_name='location'),
        ),
        migrations.AddField(
            model_name='epoch',
            name='ref',
            field=models.ManyToManyField(blank=True, to='main.reference', verbose_name='reference'),
        ),
        migrations.AddField(
            model_name='date',
            name='ref',
            field=models.ManyToManyField(blank=True, to='main.reference', verbose_name='reference'),
        ),
        migrations.AddField(
            model_name='culture',
            name='date',
            field=models.ManyToManyField(to='main.date', verbose_name='time'),
        ),
        migrations.AddField(
            model_name='culture',
            name='loc',
            field=models.ManyToManyField(to='main.location', verbose_name='location'),
        ),
        migrations.AddField(
            model_name='culture',
            name='ref',
            field=models.ManyToManyField(blank=True, to='main.reference', verbose_name='reference'),
        ),
        migrations.AddField(
            model_name='checkpoint',
            name='date',
            field=models.ManyToManyField(blank=True, to='main.date', verbose_name='date'),
        ),
        migrations.AddField(
            model_name='checkpoint',
            name='loc',
            field=models.ManyToManyField(blank=True, to='main.location', verbose_name='location'),
        ),
        migrations.AddField(
            model_name='checkpoint',
            name='ref',
            field=models.ManyToManyField(blank=True, to='main.reference', verbose_name='reference'),
        ),
    ]
